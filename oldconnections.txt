using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MQOBot.Webclients;
using MQOBot.Controllers;
using MQOBot.Events;
using System.Net;

//http://stackoverflow.com/questions/2798610/login-to-website-and-use-cookie-to-get-source-for-another-page


namespace MQOBot.Controllers
{
    class ConnectionController
    {
        private static ConnectionController instance;

        Random rand = new Random();

        // Bot Clients
        WebClientEx MainWebClient = new WebClientEx();
        WebClientEx ChatWebClient = new WebClientEx();
        WebClientEx StatsWebClient = new WebClientEx();
        WebClientEx FightWebClient = new WebClientEx();
        WebClientEx SkillWebClient = new WebClientEx();
        // Run on another thread

        // Form Client
        WebClientEx LoginWebClient = new WebClientEx();
        WebClientEx LoginPageWebClient = new WebClientEx();
        WebClientEx CharSelectWebClient = new WebClientEx();
        WebClientEx CookieWebClient = new WebClientEx();

        string TempConnectionString = "";

        public static ConnectionController Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = new ConnectionController();
                }
                return instance;
            }
        }

        public ConnectionController()
        {
            // Bot Events
            MQOEvents.onRequestChatUpdate += MQOEvents_onRequestChatUpdate;
            MQOEvents.onRequestStatUpdate += MQOEvents_onRequestStatUpdate;
            MQOEvents.onOpenChest += MQOEvents_onOpenChest;
            MQOEvents.onStartWork += MQOEvents_onStartWork;
            MQOEvents.onStopWork += MQOEvents_onStopWork;
            MQOEvents.onFight += MQOEvents_onFight;
            MQOEvents.onAttack += MQOEvents_onAttack;

            // Form Events
            MQOEvents.onSendMessage += MQOEvents_onSendMessage;
            MQOEvents.onRequestLogin += MQOEvents_onRequestLogin;
            MQOEvents.onRequestCharacterSelection += MQOEvents_onRequestCharacterSelection;
            MQOEvents.onGetCookie += MQOEvents_onGetCookie;

            // Connection Events
            MQOEvents.onLoginPageRequested += MQOEvents_onLoginPageRequested;

            // Connection Connection Events
            LoginPageWebClient.DownloadStringCompleted += LoginPageWebClient_DownloadStringCompleted;

            // Form Connection Events
            LoginWebClient.UploadStringCompleted += LoginWebClient_UploadStringCompleted;
            CharSelectWebClient.DownloadStringCompleted += CharSelectWebClient_DownloadStringCompleted;
            CookieWebClient.DownloadStringCompleted += CookieWebClient_DownloadStringCompleted;

            // Bot Connection events
            FightWebClient.DownloadStringCompleted += FightWebClient_DownloadStringCompleted;
            SkillWebClient.DownloadStringCompleted += SkillWebClient_DownloadStringCompleted;
            MainWebClient.DownloadStringCompleted += MainWebClient_DownloadStringCompleted;
            ChatWebClient.DownloadStringCompleted += ChatWebClient_DownloadStringCompleted;
            StatsWebClient.DownloadStringCompleted += StatsWebClient_DownloadStringCompleted;
        }

        void CharSelectWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            if (!e.Cancelled)
            {
                MQOEvents.OpenCharacterSelection(e.Result);
            }
        }

        void MQOEvents_onRequestCharacterSelection(object obj)
        {
            MQOEvents.TestEvent("Opening char page");
            Uri tempUri = new Uri("http://midenquest.com/UserCharacterSelection.aspx");
            CharSelectWebClient.DownloadStringAsync(tempUri);
        }

        void LoginWebClient_UploadStringCompleted(object sender, System.Net.UploadStringCompletedEventArgs e)
        {
            //MQOEvents.TestEvent("Login Completed");
            MQOEvents.RequestCharacterSelection(true);
        }

        void MQOEvents_onRequestLogin(object obj)
        {
            if (!LoginWebClient.IsBusy)
            {
                string connectionInfo = TempConnectionString;
                string[] parsed = connectionInfo.Split(',');
                string Params = "User=" + parsed[0] + "&Pass=" + parsed[1];
                
                MQOEvents.TestEvent(Params);

                string tempStringUri = "http://midenquest.com/UserLogin.aspx";
                LoginWebClient.Headers[HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";
                LoginWebClient.UploadString(tempStringUri, Params);
                MQOEvents.RequestCharacterSelection(true);
            }
            else
            {
                MQOEvents.TestEvent("Busy");
            }
        }

        void LoginPageWebClient_DownloadStringCompleted(object sender, DownloadStringCompletedEventArgs e)
        {
            MQOEvents.RequestLogin(true);
        }

        void MQOEvents_onLoginPageRequested(object obj)
        {
            LoginPageWebClient.DownloadString("http://midenquest.com/UserLogin.aspx");
        }

        void CookieWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            // Cookies!
            MainWebClient.CookieContainer = CookieWebClient.CookieContainer;
            ChatWebClient.CookieContainer = CookieWebClient.CookieContainer;
            StatsWebClient.CookieContainer = CookieWebClient.CookieContainer;
            FightWebClient.CookieContainer = CookieWebClient.CookieContainer;
            SkillWebClient.CookieContainer = CookieWebClient.CookieContainer;
            CharSelectWebClient.CookieContainer = CookieWebClient.CookieContainer;
            LoginPageWebClient.CookieContainer = CookieWebClient.CookieContainer;
            LoginWebClient.CookieContainer = CookieWebClient.CookieContainer;

            MQOEvents.LoginPageRequested(true);
        }

        void MQOEvents_onGetCookie(object obj)
        {
            if (!CookieWebClient.IsBusy)
            {
                TempConnectionString = (string)obj;
                SetHeaders();
                Uri tempUri = new Uri("http://midenquest.com");
                CookieWebClient.DownloadStringAsync(tempUri);
            }
        }

        void MQOEvents_onSendMessage(object obj)
        {
            if (!LoginWebClient.IsBusy)
            {
                string Message = (string)obj;
                Uri tempUri = new Uri("http://midenquest.com/sendMessage.aspx?ch=1&Message=" + Message + "&sid=" + GetSID().ToString());
            }
        }

        void StatsWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            MQOEvents.StatReady(e.Result);
        }

        void ChatWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            MQOEvents.ChatReady(e.Result);
        }

        void MainWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            MQOEvents.MainReady(true);
        }

        void SkillWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            MQOEvents.WorkReady(true);
        }

        void FightWebClient_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            MQOEvents.FightReady(true);
        }

        void MQOEvents_onAttack(object obj)
        {
            if (!FightWebClient.IsBusy)
            {
                Uri tempUri = new Uri("http://midenquest.com/useSkill.aspx?id=1&ta=" + (string)obj);
                FightWebClient.DownloadStringAsync(tempUri);
            }
        }

        void MQOEvents_onFight(object obj)
        {
            if (!FightWebClient.IsBusy)
            {
                Uri tempUri = new Uri("http://midenquest.com/useWork.aspx?start=" + (string)obj + "&null=");
                FightWebClient.DownloadStringAsync(tempUri);
            }
        }

        void MQOEvents_onStopWork(object obj)
        {
            if (!SkillWebClient.IsBusy)
            {
                Uri tempUri = new Uri("http://midenquest.com/useWork.aspx?stop=4&null=&sid=" + (string)obj);
                SkillWebClient.DownloadStringAsync(tempUri);
            }
        }

        void MQOEvents_onStartWork(object obj)
        {
            if (!SkillWebClient.IsBusy)
            {
                Uri tempUri = new Uri("http://midenquest.com/useWork.aspx?start=" + (string)obj + "&null=");
                SkillWebClient.DownloadStringAsync(tempUri);
            }
        }

        void MQOEvents_onOpenChest(object obj)
        {
            if (!MainWebClient.IsBusy)
            {
                Uri tempUri = new Uri("http://midenquest.com/getCharacterSheet.aspx?open=1");
                MainWebClient.DownloadStringAsync(tempUri);
            }
        }

        void MQOEvents_onRequestChatUpdate(object obj)
        {
            //when its done throw the chat update event
            if (!ChatWebClient.IsBusy)
            {
                string tempChat = ChatWebClient.DownloadString("http://midenquest.com/getChatLog.aspx");
            }
        }

        void MQOEvents_onRequestStatUpdate(object obj)
        {
            throw new NotImplementedException();
        }

        public double GetSID()
        {
            return rand.NextDouble();
        }

        public void SetHeaders()
        {
            LoginWebClient.Headers.Add("Host", "www.midenquest.com");
            LoginWebClient.Headers.Add("Content-Type", "text/html");
            //FormWebClientnt.Headers.Add("X-Requested-By", "XHR");
            //FormWebClientnt.Headers.Add("X-Request-Id", "0");
            LoginWebClient.BaseAddress = "http://www.midenquest.com/Game.aspx";
            LoginWebClient.Headers.Add("User-Agent", "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.90 Safari/537.36");
            LoginWebClient.Headers.Add("Referer", "http://www.midenquest.com/Game.aspx");
            LoginWebClient.Headers.Add("Accept", "*/*");
            LoginWebClient.Headers.Add("Accept-Encoding", "gzip, deflate, sdch");
            LoginWebClient.Headers.Add("Accept-Language", "en-GB, en-US;q=0.8,en;q=0.6");
        }
    }
}
